import 'package:flutter/material.dart';
import '../../theme/app_colors.dart';
import '../../theme/app_text_styles.dart';
import '../../widgets/page_wrapper.dart';
import '../../widgets/custom_button.dart';
import '../../—Åore/router/app_router.dart';

class HomePage extends StatelessWidget {
  const HomePage({super.key});

  @override
  Widget build(BuildContext context) {
    return PageWrapper(
      currentRoute: AppRouter.home,
      child: Column(
        children: [
          _buildHeroSection(context),
          _buildMissionSection(context),
          _buildHowItWorksSection(context),
          _buildPsychologistsSection(context),
          _buildStepsSection(context),
          _buildCTASection(context),
        ],
      ),
    );
  }

  Widget _buildHeroSection(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    final isMobile = width < 768;
    final isTablet = width >= 768 && width < 1024;

    return Container(
      padding: EdgeInsets.symmetric(
        horizontal: isMobile ? 20 : (isTablet ? 40 : 80),
        vertical: isMobile ? 40 : 80,
      ),
      child: isMobile
          ? Column(
              children: [
                _buildHeroContent(context, isMobile, isTablet),
                const SizedBox(height: 40),
                _buildHeroImage(isMobile),
              ],
            )
          : Row(
              children: [
                Expanded(child: _buildHeroContent(context, isMobile, isTablet)),
                const SizedBox(width: 60),
                Expanded(child: _buildHeroImage(isMobile)),
              ],
            ),
    );
  }

  Widget _buildHeroContent(BuildContext context, bool isMobile, bool isTablet) {
    return Column(
      crossAxisAlignment: isMobile
          ? CrossAxisAlignment.center
          : CrossAxisAlignment.start,
      children: [
        Text(
          '–°–µ—Ä–≤–∏—Å –æ–Ω–ª–∞–π–Ω-–ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏',
          style: AppTextStyles.body2.copyWith(
            fontSize: 16,
            color: AppColors.primary,
            fontWeight: FontWeight.w600,
          ),
          textAlign: isMobile ? TextAlign.center : TextAlign.left,
        ),
        const SizedBox(height: 16),
        Text.rich(
          TextSpan(
            children: [
              TextSpan(
                text: '–¢–≤–æ—è ',
                style: AppTextStyles.h1.copyWith(fontSize: isMobile ? 32 : 48),
              ),
              TextSpan(
                text: '–ø–æ–¥–¥–µ—Ä–∂–∫–∞\n',
                style: AppTextStyles.h1.copyWith(
                  fontSize: isMobile ? 32 : 48,
                  color: AppColors.primary,
                ),
              ),
              TextSpan(
                text: '–¢–≤–æ–π ',
                style: AppTextStyles.h1.copyWith(fontSize: isMobile ? 32 : 48),
              ),
              TextSpan(
                text: '–±–∞–ª–∞–Ω—Å',
                style: AppTextStyles.h1.copyWith(
                  fontSize: isMobile ? 32 : 48,
                  color: AppColors.primary,
                ),
              ),
            ],
          ),
          textAlign: isMobile ? TextAlign.center : TextAlign.left,
        ),
        const SizedBox(height: 24),
        Text(
          '–ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å –æ–Ω–ª–∞–π–Ω –≤ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è',
          style: AppTextStyles.body1.copyWith(
            fontSize: isMobile ? 16 : 18,
            color: AppColors.textSecondary,
          ),
          textAlign: isMobile ? TextAlign.center : TextAlign.left,
        ),
        const SizedBox(height: 32),
        SizedBox(
          width: isMobile ? double.infinity : 240,
          height: 56,
          child: CustomButton(
            text: '–í—ã–±—Ä–∞—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞',
            onPressed: () =>
                Navigator.pushNamed(context, AppRouter.psychologists),
            isPrimary: true,
            isFullWidth: true,
          ),
        ),
      ],
    );
  }

  Widget _buildHeroImage(bool isMobile) {
    return Container(
      height: isMobile ? 300 : 400,
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(24),
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            AppColors.primary.withOpacity(0.1),
            AppColors.primaryLight.withOpacity(0.15),
          ],
        ),
      ),
      child: Center(
        child: Icon(
          Icons.phone_iphone_rounded,
          size: isMobile ? 120 : 180,
          color: AppColors.primary.withOpacity(0.3),
        ),
      ),
    );
  }

  Widget _buildMissionSection(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    final isMobile = width < 768;
    final isTablet = width >= 768 && width < 1024;

    final items = [
      {'title': '–°–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç—Ä–µ–≤–æ–≥–æ–π –∏ —Å—Ç—Ä–µ—Å—Å–æ–º', 'emoji': 'üò∞'},
      {'title': '–ü–æ–Ω—è—Ç—å, –ø–æ—á–µ–º—É —Ç—Ä—É–¥–Ω–æ –Ω–∞—É—á–∏—Ç—å—Å—è –¥–æ–≤–µ—Ä—è—Ç—å', 'emoji': 'ü§î'},
      {
        'title': '–ü–æ–ª—É—á–∏—Ç—å —Å–∞–º–æ–æ–±–ª–∞–¥–∞–Ω–∏–µ ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–±–æ–¥—É –¥–µ–π—Å—Ç–≤–∏–π',
        'emoji': 'üòå',
      },
      {
        'title': '–ù–∞–π—Ç–∏ —Å–º—ã—Å–ª ‚Äî –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —á—Ç–æ —Ö–æ—á–µ—Ç—Å—è –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç—å',
        'emoji': 'üí™',
      },
    ];

    return Container(
      padding: EdgeInsets.symmetric(
        horizontal: isMobile ? 20 : (isTablet ? 40 : 80),
        vertical: isMobile ? 40 : 80,
      ),
      color: Colors.white,
      child: Column(
        children: [
          Text(
            '–° —á–µ–º –ø–æ–º–æ–≥—É—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏',
            style: AppTextStyles.h1.copyWith(fontSize: isMobile ? 28 : 40),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 48),
          Wrap(
            spacing: 24,
            runSpacing: 24,
            alignment: WrapAlignment.center,
            children: items
                .map((item) => _buildMissionCard(item, isMobile, isTablet))
                .toList(),
          ),
        ],
      ),
    );
  }

  Widget _buildMissionCard(
    Map<String, String> item,
    bool isMobile,
    bool isTablet,
  ) {
    final cardWidth = isMobile ? double.infinity : (isTablet ? 300.0 : 260.0);

    return Container(
      width: cardWidth,
      padding: const EdgeInsets.all(24),
      decoration: BoxDecoration(
        color: AppColors.backgroundLight,
        borderRadius: BorderRadius.circular(20),
        border: Border.all(color: AppColors.primary.withOpacity(0.1)),
      ),
      child: Column(
        children: [
          Container(
            width: 80,
            height: 80,
            decoration: BoxDecoration(
              color: AppColors.primary.withOpacity(0.1),
              shape: BoxShape.circle,
            ),
            child: Center(
              child: Text(item['emoji']!, style: const TextStyle(fontSize: 40)),
            ),
          ),
          const SizedBox(height: 16),
          Text(
            item['title']!,
            style: AppTextStyles.body1.copyWith(fontSize: 16),
            textAlign: TextAlign.center,
          ),
        ],
      ),
    );
  }

  Widget _buildHowItWorksSection(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    final isMobile = width < 768;
    final isTablet = width >= 768 && width < 1024;

    return Container(
      padding: EdgeInsets.symmetric(
        horizontal: isMobile ? 20 : (isTablet ? 40 : 80),
        vertical: isMobile ? 40 : 80,
      ),
      child: Column(
        children: [
          Text(
            '–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç',
            style: AppTextStyles.h1.copyWith(fontSize: isMobile ? 28 : 40),
          ),
          const SizedBox(height: 48),
          isMobile
              ? Column(
                  children: [
                    _buildHowItWorksStep(
                      '1',
                      '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
                      '–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∑–∞ 2 –º–∏–Ω—É—Ç—ã',
                    ),
                    const SizedBox(height: 24),
                    _buildHowItWorksStep(
                      '2',
                      '–í—ã–±–æ—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∞',
                      '–ü–æ–¥–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ–¥ –≤–∞—à –∑–∞–ø—Ä–æ—Å',
                    ),
                    const SizedBox(height: 24),
                    _buildHowItWorksStep(
                      '3',
                      '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
                      '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Å–µ–∞–Ω—Å –æ–Ω–ª–∞–π–Ω –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è',
                    ),
                  ],
                )
              : Row(
                  children: [
                    Expanded(
                      child: _buildHowItWorksStep(
                        '1',
                        '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
                        '–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∑–∞ 2 –º–∏–Ω—É—Ç—ã',
                      ),
                    ),
                    const SizedBox(width: 24),
                    Expanded(
                      child: _buildHowItWorksStep(
                        '2',
                        '–í—ã–±–æ—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∞',
                        '–ü–æ–¥–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ–¥ –≤–∞—à –∑–∞–ø—Ä–æ—Å',
                      ),
                    ),
                    const SizedBox(width: 24),
                    Expanded(
                      child: _buildHowItWorksStep(
                        '3',
                        '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
                        '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Å–µ–∞–Ω—Å –æ–Ω–ª–∞–π–Ω –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è',
                      ),
                    ),
                  ],
                ),
        ],
      ),
    );
  }

  Widget _buildHowItWorksStep(String number, String title, String description) {
    return Container(
      padding: const EdgeInsets.all(24),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(20),
        boxShadow: [
          BoxShadow(
            color: AppColors.shadow,
            blurRadius: 12,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        children: [
          Container(
            width: 60,
            height: 60,
            decoration: const BoxDecoration(
              color: AppColors.primary,
              shape: BoxShape.circle,
            ),
            child: Center(
              child: Text(
                number,
                style: AppTextStyles.h2.copyWith(color: Colors.white),
              ),
            ),
          ),
          const SizedBox(height: 16),
          Text(title, style: AppTextStyles.h3),
          const SizedBox(height: 8),
          Text(
            description,
            style: AppTextStyles.body2,
            textAlign: TextAlign.center,
          ),
        ],
      ),
    );
  }

  Widget _buildPsychologistsSection(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    final isMobile = width < 768;
    final isTablet = width >= 768 && width < 1024;

    final psychologists = [
      {'name': '–î–∞—Ä–∏—è –ê—É–±–∞–∫–∏—Ä–æ–≤–∞', 'spec': '8 –ª–µ—Ç –æ–ø—ã—Ç–∞', 'rating': '4.9'},
      {'name': '–Ø–Ω–∞ –ü—Ä–æ–∑–æ—Ä–æ–≤–∞', 'spec': '10 –ª–µ—Ç –æ–ø—ã—Ç–∞', 'rating': '5.0'},
      {'name': '–õ–∞—É—Ä–∞ –ë–æ–ª–¥–∏–Ω–∞', 'spec': '7 –ª–µ—Ç –æ–ø—ã—Ç–∞', 'rating': '4.8'},
    ];

    return Container(
      padding: EdgeInsets.symmetric(
        horizontal: isMobile ? 20 : (isTablet ? 40 : 80),
        vertical: isMobile ? 40 : 80,
      ),
      color: Colors.white,
      child: Column(
        children: [
          Text(
            '–ö–æ–º–∞–Ω–¥–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤',
            style: AppTextStyles.h1.copyWith(fontSize: isMobile ? 28 : 40),
          ),
          const SizedBox(height: 16),
          Text(
            '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏ —Å–æ —Å—Ç–∞–∂–µ–º —Ä–∞–±–æ—Ç—ã',
            style: AppTextStyles.body1.copyWith(color: AppColors.textSecondary),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 48),
          Wrap(
            spacing: 24,
            runSpacing: 24,
            alignment: WrapAlignment.center,
            children: psychologists
                .map((psy) => _buildPsychologistCard(psy, isMobile, isTablet))
                .toList(),
          ),
          const SizedBox(height: 32),
          SizedBox(
            width: isMobile ? double.infinity : 200,
            height: 48,
            child: CustomButton(
              text: '–í—Å–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã',
              onPressed: () =>
                  Navigator.pushNamed(context, AppRouter.psychologists),
              isPrimary: false,
              isFullWidth: true,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildPsychologistCard(
    Map<String, String> psy,
    bool isMobile,
    bool isTablet,
  ) {
    final cardWidth = isMobile ? double.infinity : (isTablet ? 280.0 : 300.0);

    return Container(
      width: cardWidth,
      padding: const EdgeInsets.all(24),
      decoration: BoxDecoration(
        color: AppColors.backgroundLight,
        borderRadius: BorderRadius.circular(20),
        border: Border.all(color: AppColors.primary.withOpacity(0.2), width: 2),
      ),
      child: Column(
        children: [
          Container(
            width: 120,
            height: 120,
            decoration: BoxDecoration(
              color: AppColors.primary.withOpacity(0.2),
              shape: BoxShape.circle,
            ),
            child: const Icon(Icons.person, size: 60, color: AppColors.primary),
          ),
          const SizedBox(height: 16),
          Text(psy['name']!, style: AppTextStyles.h3),
          const SizedBox(height: 8),
          Text(psy['spec']!, style: AppTextStyles.body2),
          const SizedBox(height: 8),
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const Icon(Icons.star, color: AppColors.warning, size: 20),
              const SizedBox(width: 4),
              Text(psy['rating']!, style: AppTextStyles.body1),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildStepsSection(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    final isMobile = width < 768;
    final isTablet = width >= 768 && width < 1024;

    return Container(
      padding: EdgeInsets.symmetric(
        horizontal: isMobile ? 20 : (isTablet ? 40 : 80),
        vertical: isMobile ? 40 : 80,
      ),
      child: Column(
        children: [
          Text(
            '–°–¥–µ–ª–∞–π —à–∞–≥ –∫ –∑–∞–±–æ—Ç–µ –æ —Å–µ–±–µ',
            style: AppTextStyles.h1.copyWith(fontSize: isMobile ? 28 : 40),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 48),
          isMobile
              ? Column(
                  children: [
                    _buildStepCard(
                      '1',
                      '–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å',
                    ),
                    const SizedBox(height: 24),
                    _buildStepCard(
                      '2',
                      '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é –¥–ª—è —Å–µ–±—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏',
                    ),
                    const SizedBox(height: 24),
                    _buildStepCard(
                      '3',
                      '–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥–±–æ—Ä–∫—É –æ–ø—ã—Ç–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ–¥ –≤–∞—à –∑–∞–ø—Ä–æ—Å',
                    ),
                  ],
                )
              : Row(
                  children: [
                    Expanded(
                      child: _buildStepCard(
                        '1',
                        '–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å',
                      ),
                    ),
                    const SizedBox(width: 24),
                    Expanded(
                      child: _buildStepCard(
                        '2',
                        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é –¥–ª—è —Å–µ–±—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏',
                      ),
                    ),
                    const SizedBox(width: 24),
                    Expanded(
                      child: _buildStepCard(
                        '3',
                        '–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥–±–æ—Ä–∫—É –æ–ø—ã—Ç–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ–¥ –≤–∞—à –∑–∞–ø—Ä–æ—Å',
                      ),
                    ),
                  ],
                ),
          const SizedBox(height: 48),
          SizedBox(
            width: isMobile ? double.infinity : 280,
            height: 56,
            child: CustomButton(
              text: '–ù–∞—á–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å',
              onPressed: () => Navigator.pushNamed(context, AppRouter.register),
              isPrimary: true,
              isFullWidth: true,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildStepCard(String number, String text) {
    return Container(
      padding: const EdgeInsets.all(24),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(20),
        boxShadow: [
          BoxShadow(
            color: AppColors.shadow,
            blurRadius: 12,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        children: [
          Text(
            number,
            style: AppTextStyles.h1.copyWith(
              fontSize: 48,
              color: AppColors.primary,
            ),
          ),
          const SizedBox(height: 16),
          Text(text, style: AppTextStyles.body1, textAlign: TextAlign.center),
        ],
      ),
    );
  }

  Widget _buildCTASection(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    final isMobile = width < 768;

    return Container(
      margin: EdgeInsets.symmetric(
        horizontal: isMobile ? 20 : 80,
        vertical: isMobile ? 40 : 80,
      ),
      padding: EdgeInsets.all(isMobile ? 32 : 60),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [AppColors.primary, AppColors.primaryDark],
        ),
        borderRadius: BorderRadius.circular(24),
      ),
      child: Column(
        children: [
          Text(
            '–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø—É—Ç—å –∫ –±–∞–ª–∞–Ω—Å—É?',
            style: AppTextStyles.h1.copyWith(
              fontSize: isMobile ? 28 : 36,
              color: Colors.white,
            ),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 16),
          Text(
            '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä–≤—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é',
            style: AppTextStyles.body1.copyWith(
              fontSize: 18,
              color: Colors.white.withOpacity(0.9),
            ),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 32),
          SizedBox(
            width: isMobile ? double.infinity : 240,
            height: 56,
            child: CustomButton(
              text: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
              onPressed: () => Navigator.pushNamed(context, AppRouter.register),
              isPrimary: false,
              isFullWidth: true,
            ),
          ),
        ],
      ),
    );
  }
}
